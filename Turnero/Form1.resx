<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>